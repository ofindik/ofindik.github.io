{
  "openapi": "3.0.0",
  "info": {
    "title": "RBT SC3 DSP Service Interface",
    "description": "This document provides the RESTful service interface specification of RBT. Client of the interface will be RBT Back-End. Server of the interface will be DSP.",
    "version": "v1.0.1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Offers",
      "description": "Operations for RBT offers"
    }
  ],
  "paths": {
    "/rbt/v1/offers": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Queries the offers",
        "description": "This method is used to query all offers.",
        "operationId": "queryOffers",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Offers are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offers"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/offers/{offerId}": {
      "get": {
        "tags": [
          "Offers"
        ],
        "summary": "Queries an offer",
        "description": "This method is used to query an offer identified by {offerId}.",
        "operationId": "queryOffer",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offerIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Offer is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Offer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Offers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Offer"
        }
      },
      "Offer": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "chargingPeriod"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the offer",
            "example": "10001"
          },
          "name": {
            "type": "string",
            "description": "Possible values are:\n  - RBT\n  - PrayerTimes\n  - ProfileService\n  - MySignature",
            "example": "PrayerTimes"
          },
          "description": {
            "type": "string",
            "description": "Description of the offer",
            "example": "PrayerTimes Offer Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the offer",
            "example": "5"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the offer",
            "example": "P000Y000M030DT00H00M00S"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the offer in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the offer in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the offer in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          },
          "parentId": {
            "type": "string",
            "description": "Identifier of the parent offer",
            "example": "10002"
          },
          "parentName": {
            "type": "string",
            "description": "Possible values are:\n  - RBT",
            "example": "RBT"
          }
        }
      },
      "Error": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "Possible errors:\n  - 1001 - Mandatory parameter \"parameter name\" is missing.\n  - 1002 - Parameter \"parameter name\" is not valid.\n  - 9000 - System failure. Details: \"Error detail\"."
      }
    },
    "parameters": {
      "languageParam": {
        "name": "X-Language",
        "in": "header",
        "description": "Language of the subscriber. Possible values are;\n  - EN\n  - AR",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "channelParam": {
        "name": "X-Channel",
        "in": "header",
        "description": "This parameter is used to track the channel of the request. Possible values are;\n  - IVR\n  - USSD\n  - SMS\n  - RBTMobileApp\n  - RBTSubscriberPortal\n  - MobilyMobileApp\n  - MobilyEPortal\n  - OTHER",
        "schema": {
          "type": "string"
        }
      },
      "usernameParam": {
        "name": "X-Username",
        "in": "header",
        "description": "This parameter is used to track the user of the API; log purposes only. Maximum length can be 128 chars.",
        "schema": {
          "type": "string"
        }
      },
      "offerIdParam": {
        "name": "offerId",
        "in": "path",
        "description": "Identifier of the offer",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "basic_security": {
        "type": "http",
        "description": "Basic Authentication",
        "scheme": "basic"
      }
    }
  }
}