{
  "openapi": "3.0.0",
  "info": {
    "title": "RBT SC4 DSP Content Interface",
    "description": "This document provides the RESTful content interface specification of RBT. Client of the interface will be RBT Back-End. Server of the interface will be DSP.",
    "version": "v7"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "Tones",
      "description": "Operations for tones"
    },
    {
      "name": "Albums",
      "description": "Operations for albums"
    },
    {
      "name": "Artists",
      "description": "Operations for artists"
    },
    {
      "name": "Categories",
      "description": "Operations for categories"
    },
    {
      "name": "Moods",
      "description": "Operations for moods"
    },
    {
      "name": "Trending",
      "description": "Operations for trending contents"
    },
    {
      "name": "Promoted",
      "description": "Operations for promoted contents"
    }
  ],
  "paths": {
    "/rbt/v1/tones": {
      "get": {
        "tags": [
          "Tones"
        ],
        "summary": "Queries the tones matching to the key param",
        "description": "This method is used to query tones matching to the {key} parameter.",
        "operationId": "queryTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/keyParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/tones/{toneId}": {
      "get": {
        "tags": [
          "Tones"
        ],
        "summary": "Queries a tone",
        "description": "This method is used to query a tone identified by {toneId}.",
        "operationId": "queryTone",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/toneIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tone is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tone"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the albums matching to the key param",
        "description": "This method is used to query albums matching to the {key} parameter.",
        "operationId": "queryAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/keyParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums/{albumId}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries an album",
        "description": "This method is used to query an album identified by {albumId}.",
        "operationId": "queryAlbum",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/albumIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums/{albumId}/tones": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the tones of an album",
        "description": "This method is used to query the tones of an album identified by {albumId}.",
        "operationId": "queryAlbumTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/albumIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tones of an Album are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums/{albumId}/artists": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the artists of an album",
        "description": "This method is used to query the artists of an album identified by {albumId}.",
        "operationId": "queryAlbumArtists",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/albumIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Artists of an Album are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artists"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums/{albumId}/categories": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the categories of an album",
        "description": "This method is used to query the categories of an album identified by {albumId}.",
        "operationId": "queryAlbumCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/albumIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories of an Album are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/albums/{albumId}/moods": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the moods of an album",
        "description": "This method is used to query the moods of an album identified by {albumId}.",
        "operationId": "queryAlbumMoods",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/albumIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Moods of an Album are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moods"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/artists": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Queries the artists matching to the key param",
        "description": "This method is used to query artists matching to the {key} parameter.",
        "operationId": "queryArtists",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/keyParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Artists are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artists"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/artists/{artistId}": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Queries an artist",
        "description": "This method is used to query an artist identified by {artistId}.",
        "operationId": "queryArtist",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/artistIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Artist is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/artists/{artistId}/tones": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Queries the tones of an artist",
        "description": "This method is used to query the tones of an artist identified by {artistId}.",
        "operationId": "queryArtistTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/artistIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tones of an Artist are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/artists/{artistId}/albums": {
      "get": {
        "tags": [
          "Artists"
        ],
        "summary": "Queries the albums of an artist",
        "description": "This method is used to query the albums of an artist identified by {artistId}.",
        "operationId": "queryArtistAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/artistIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Albums of an Artist are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Queries all categories",
        "description": "This method is used to query all categories.",
        "operationId": "queryCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Queries a category",
        "description": "This method is used to query a category identified by {categoryId}.",
        "operationId": "queryCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/categoryIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Category is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/categories/{categoryId}/tones": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Queries the tones of a category",
        "description": "This method is used to query the tones of a category identified by {categoryId}.",
        "operationId": "queryCategoryTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/categoryIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tones of a Category are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/categories/{categoryId}/albums": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Queries the albums of a category",
        "description": "This method is used to query the albums of a category identified by {categoryId}.",
        "operationId": "queryCategoryAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/categoryIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Albums of a Category are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/moods": {
      "get": {
        "tags": [
          "Moods"
        ],
        "summary": "Queries all moods",
        "description": "This method is used to query all moods.",
        "operationId": "queryMoods",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moods"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/moods/{moodId}": {
      "get": {
        "tags": [
          "Moods"
        ],
        "summary": "Queries a mood",
        "description": "This method is used to query a mood identified by {moodId}.",
        "operationId": "queryMood",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/moodIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Mood is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mood"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/moods/{moodId}/tones": {
      "get": {
        "tags": [
          "Moods"
        ],
        "summary": "Queries the tones of a mood",
        "description": "This method is used to query the tones of a mood identified by {moodId}.",
        "operationId": "queryMoodTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/moodIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Tones of a Mood are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseTones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/moods/{moodId}/albums": {
      "get": {
        "tags": [
          "Moods"
        ],
        "summary": "Queries the albums of a mood",
        "description": "This method is used to query the albums of a mood identified by {moodId}.",
        "operationId": "queryMoodAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/moodIdParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Albums of a Mood are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/trending/tones": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending tones",
        "description": "This method is used to query trending tones. Top 5 tones with more than 100 subscriptions within one week.",
        "operationId": "queryTrendingTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/trending/albums": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending albums",
        "description": "This method is used to query trending albums. Top 5 albums with more than 100 subscriptions within one week.",
        "operationId": "queryTrendingAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/trending/categories": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending categories",
        "description": "This method is used to query trending categories. Top 5 categories with more than 100 subscriptions within one week.",
        "operationId": "queryTrendingCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/trending/moods": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending moods",
        "description": "This method is used to query trending moods. Top 5 moods with more than 100 subscriptions within one week.",
        "operationId": "queryTrendingMoods",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moods"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/promoted/tones": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted tones",
        "description": "This method is used to query promoted tones. Promoted tones are marked on Content Management System.",
        "operationId": "queryPromotedTones",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tones"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/promoted/albums": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted albums",
        "description": "This method is used to query promoted albums. Promoted albums are marked on Content Management System.",
        "operationId": "queryPromotedAlbums",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Albums"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/promoted/categories": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted categories",
        "description": "This method is used to query promoted categories. Promoted categories are marked on Content Management System.",
        "operationId": "queryPromotedCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    },
    "/rbt/v1/promoted/moods": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted moods",
        "description": "This method is used to query promoted moods. Promoted moods are marked on Content Management System.",
        "operationId": "queryPromotedMoods",
        "parameters": [
          {
            "$ref": "#/components/parameters/languageParam"
          },
          {
            "$ref": "#/components/parameters/channelParam"
          },
          {
            "$ref": "#/components/parameters/usernameParam"
          },
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Moods"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic_security": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Tones": {
        "required": [
          "tones"
        ],
        "type": "object",
        "properties": {
          "tones": {
            "$ref": "#/components/schemas/ToneArray"
          }
        }
      },
      "ToneArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Tone"
        }
      },
      "Tone": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "length",
          "toneUrl",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the tone",
            "example": "1111"
          },
          "name": {
            "type": "string",
            "description": "Name of the tone",
            "example": "Tone A"
          },
          "description": {
            "type": "string",
            "description": "Description of the tone",
            "example": "Tone A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the tone",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the tone",
            "example": "11022"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the tone",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the tone indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the tone in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "length": {
            "type": "integer",
            "description": "Length of the tone in seconds",
            "example": 150
          },
          "toneUrl": {
            "type": "string",
            "description": "Tone content address in URL format",
            "example": "http://<dsp_cms_vip>/ccc"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the tone in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the tone in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n  - Male\n  - Female",
            "example": "Male"
          },
          "albums": {
            "$ref": "#/components/schemas/AlbumArray"
          },
          "artists": {
            "$ref": "#/components/schemas/ArtistArray"
          },
          "categories": {
            "$ref": "#/components/schemas/CategoryArray"
          },
          "moods": {
            "$ref": "#/components/schemas/MoodArray"
          }
        }
      },
      "BaseTones": {
        "required": [
          "tones"
        ],
        "type": "object",
        "properties": {
          "tones": {
            "$ref": "#/components/schemas/BaseToneArray"
          }
        }
      },
      "BaseToneArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseTone"
        }
      },
      "BaseTone": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "length",
          "toneUrl",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the tone",
            "example": "1111"
          },
          "name": {
            "type": "string",
            "description": "Name of the tone",
            "example": "Tone A"
          },
          "description": {
            "type": "string",
            "description": "Description of the tone",
            "example": "Tone A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the tone",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the tone",
            "example": "11022"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the tone",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the tone indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the tone in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "length": {
            "type": "integer",
            "description": "Length of the tone in seconds",
            "example": 150
          },
          "toneUrl": {
            "type": "string",
            "description": "Tone content address in URL format",
            "example": "http://<dsp_cms_vip>/ccc"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the tone in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the tone in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n  - Male\n  - Female",
            "example": "Male"
          }
        }
      },
      "TagArray": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "USSD"
        }
      },
      "Albums": {
        "required": [
          "albums"
        ],
        "type": "object",
        "properties": {
          "albums": {
            "$ref": "#/components/schemas/AlbumArray"
          }
        }
      },
      "AlbumArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Album"
        }
      },
      "Album": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "tags",
          "defaultTone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the album",
            "example": "5555"
          },
          "name": {
            "type": "string",
            "description": "Name of the album",
            "example": "Album A"
          },
          "description": {
            "type": "string",
            "description": "Description of the album",
            "example": "Album A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the album",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the album",
            "example": "11033"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the album",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the album indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the album in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/BaseTone"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the album in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the album in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the album in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          }
        }
      },
      "Artists": {
        "required": [
          "artists"
        ],
        "type": "object",
        "properties": {
          "artists": {
            "$ref": "#/components/schemas/ArtistArray"
          }
        }
      },
      "ArtistArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Artist"
        }
      },
      "Artist": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "tags",
          "defaultTone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the artist",
            "example": "3333"
          },
          "name": {
            "type": "string",
            "description": "Name of the artist",
            "example": "Artist A"
          },
          "description": {
            "type": "string",
            "description": "Description of the artist",
            "example": "Artist A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the artist",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the artist",
            "example": "11044"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the artist",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the artist indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the artist in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/BaseTone"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the artist in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the artist in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the artist in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n  - Male\n  - Female",
            "example": "Male"
          }
        }
      },
      "Categories": {
        "required": [
          "categories"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "$ref": "#/components/schemas/CategoryArray"
          }
        }
      },
      "CategoryArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Category"
        }
      },
      "Category": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "tags",
          "defaultTone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the category",
            "example": "11001"
          },
          "name": {
            "type": "string",
            "description": "Name of the category",
            "example": "Category A"
          },
          "description": {
            "type": "string",
            "description": "Description of the category",
            "example": "Category A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the category",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the category",
            "example": "11055"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the category",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the category indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the category in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/BaseTone"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the category in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the category in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the category in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          }
        }
      },
      "Moods": {
        "required": [
          "moods"
        ],
        "type": "object",
        "properties": {
          "moods": {
            "$ref": "#/components/schemas/MoodArray"
          }
        }
      },
      "MoodArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Mood"
        }
      },
      "Mood": {
        "required": [
          "id",
          "name",
          "description",
          "price",
          "subscriptionCode",
          "chargingPeriod",
          "currentSubscriptions",
          "updateTime",
          "tags",
          "defaultTone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the mood",
            "example": "22001"
          },
          "name": {
            "type": "string",
            "description": "Name of the mood",
            "example": "Mood A"
          },
          "description": {
            "type": "string",
            "description": "Description of the mood",
            "example": "Mood A Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the mood",
            "example": "5"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription code of the mood",
            "example": "11066"
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the mood",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptions": {
            "type": "integer",
            "description": "Active subscription count of the mood indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the mood in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "tags": {
            "$ref": "#/components/schemas/TagArray"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/BaseTone"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the mood in URL format",
            "example": "http://<dsp_cms_vip>/xxx"
          },
          "cardImage": {
            "type": "string",
            "description": "Card image of the mood in URL format",
            "example": "http://<dsp_cms_vip>/yyy"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "Page cover image of the mood in URL format",
            "example": "http://<dsp_cms_vip>/zzz"
          }
        }
      },
      "Error": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "Possible errors:\n  - 1001 - Mandatory parameter \"parameter name\" is missing.\n  - 1002 - Parameter \"parameter name\" is not valid.\n  - 9000 - System failure. Details: \"Error detail\"."
      }
    },
    "parameters": {
      "languageParam": {
        "name": "X-Language",
        "in": "header",
        "description": "Language of the subscriber. Possible values are;\n  - EN\n  - AR",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "channelParam": {
        "name": "X-Channel",
        "in": "header",
        "description": "This parameter is used to track the channel of the request. Possible values are;\n  - IVR\n  - USSD\n  - SMS\n  - RBTMobileApp\n  - RBTSubscriberPortal\n  - MobilyMobileApp\n  - MobilyEPortal\n  - OTHER",
        "schema": {
          "type": "string"
        }
      },
      "usernameParam": {
        "name": "X-Username",
        "in": "header",
        "description": "This parameter is used to track the user of the API; log purposes only. Maximum length can be 128 chars.",
        "schema": {
          "type": "string"
        }
      },
      "keyParam": {
        "name": "key",
        "in": "query",
        "description": "Key of the tone query",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "offsetParam": {
        "name": "offset",
        "in": "query",
        "description": "The number of items to skip before starting to collect the result set",
        "schema": {
          "type": "integer"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "The numbers of items to return",
        "schema": {
          "type": "integer"
        }
      },
      "sortParam": {
        "name": "sort",
        "in": "query",
        "description": "Possible values are;\n  - Name\n  - Popularity\n  - Newest\n  - Oldest",
        "schema": {
          "type": "string"
        }
      },
      "toneIdParam": {
        "name": "toneId",
        "in": "path",
        "description": "Identifier of the tone",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "artistIdParam": {
        "name": "artistId",
        "in": "path",
        "description": "Identifier of the artist",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "albumIdParam": {
        "name": "albumId",
        "in": "path",
        "description": "Identifier of the album",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "categoryIdParam": {
        "name": "categoryId",
        "in": "path",
        "description": "Identifier of the category",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "moodIdParam": {
        "name": "moodId",
        "in": "path",
        "description": "Identifier of the mood",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "basic_security": {
        "type": "http",
        "description": "Basic Authentication",
        "scheme": "basic"
      }
    }
  }
}