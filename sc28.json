{
  "openapi": "3.0.0",
  "info": {
    "title": "RBT Backend App SC28",
    "description": "This document provides the RBT Backend REST API interface. Client of the interface will be RBT App/RBT Portal/DSP (IVR, USSD, SMS). Server of interface will be RBT Backend.\n\nTest Server for RBT Backend REST API FOR SC28 defined as below.\n\nhttp://rbtapitest.mobily.com.sa/API",
    "version": "v1.0.8.3"
  },
  "servers": [
    {
      "url": "http://localhost:{port}",
      "description": "RBT Backend REST API FOR SC28.",
      "variables": {
        "port": {
          "description": "Server HTTP port.",
          "default": "8080"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Albums",
      "description": "All the api methods related with Albums."
    },
    {
      "name": "Artist",
      "description": "All the api methods related with Artist."
    },
    {
      "name": "BlackLists",
      "description": "All the blackList related api methods"
    },
    {
      "name": "Category",
      "description": "All the api methods related with Category."
    },
    {
      "name": "Confirmations",
      "description": "All the api methods related with Confirmations."
    },
    {
      "name": "Contacts",
      "description": "All the contact related api methods"
    },
    {
      "name": "Events",
      "description": "All the event related api methods"
    },
    {
      "name": "Follow",
      "description": "All the api methods related with Follows."
    },
    {
      "name": "Groups",
      "description": "All the group related api methods"
    },
    {
      "name": "Location",
      "description": "All the geolocation of a subscriber related api methods"
    },
    {
      "name": "Mood",
      "description": "All the api methods related with Mood."
    },
    {
      "name": "Oauth2",
      "description": "All the Oauth2 related api methods"
    },
    {
      "name": "Prayer Times",
      "description": "All the api methods related with Prayer Times."
    },
    {
      "name": "Promoted",
      "description": "All the api methods related with Promoted."
    },
    {
      "name": "Recommendation",
      "description": "All the api methods related with Recommendation."
    },
    {
      "name": "Services",
      "description": "All the api methods related with Services."
    },
    {
      "name": "Signatures",
      "description": "All the signature related api methods"
    },
    {
      "name": "SpecialConditionAssignments",
      "description": "All the Special Condition Assignment related api methods"
    },
    {
      "name": "SpecialCondition",
      "description": "All the Special Condition related api methods"
    },
    {
      "name": "Subscribe",
      "description": "All the api methods related with Subscribe."
    },
    {
      "name": "Subscriber",
      "description": "All the api methods related with Subscriber."
    },
    {
      "name": "Tests",
      "description": "All the tests methods"
    },
    {
      "name": "TimeFrames",
      "description": "All the timeframe related api methods"
    },
    {
      "name": "Tones",
      "description": "All the api methods related with Tones."
    },
    {
      "name": "Trending",
      "description": "All the api methods related with Trending."
    }
  ],
  "paths": {
    "/rbt/albums": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the Album matching to the key param",
        "description": "This method is used to query Album matching to the {key} parameter.",
        "operationId": "GetAlbums",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the tone query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlbumContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/albums/{albumId}": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries a Album",
        "description": "This method is used to query an album identified by {albumId}.",
        "operationId": "GetAlbum",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Resultset",
            "in": "header",
            "description": "Resultset of the content.Default value is Detail.  Possible values are;\n- Simple\n- Detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "albumId",
            "in": "path",
            "description": "Identifier of the Album",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AlbumContent"
                    },
                    {
                      "$ref": "#/components/schemas/ExtendedAlbumContent"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/albums/my": {
      "get": {
        "tags": [
          "Albums"
        ],
        "summary": "Queries the my albums.",
        "description": "This method is used to get my albums.",
        "operationId": "GetMyAlbums",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the album query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyAlbums"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/artists": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Queries the artists matching to the key param",
        "description": "This method is used to query artists matching to the {key} parameter.",
        "operationId": "GetArtists",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the tone query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artists are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArtistContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/artists/my": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Queries the my artists.",
        "description": "This method is used to get my artists.",
        "operationId": "GetMyArtists",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the album query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Artists are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyArtists"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/artists/{artistId}": {
      "get": {
        "tags": [
          "Artist"
        ],
        "summary": "Queries a artist",
        "description": "This method is used to query an artist identified by {artistId}.",
        "operationId": "GetArtist",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Resultset",
            "in": "header",
            "description": "Resultset of the content.Default value is Detail.  Possible values are;\n- Simple\n- Detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artistId",
            "in": "path",
            "description": "Identifier of the artist",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tone is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ArtistContent"
                    },
                    {
                      "$ref": "#/components/schemas/ExtendedArtistContent"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/blacklist": {
      "get": {
        "tags": [
          "BlackLists"
        ],
        "summary": "Get blackList",
        "description": "Get all blackList and their attributes.",
        "operationId": "getBlackList",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlackList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/blacklist/group": {
      "put": {
        "tags": [
          "BlackLists"
        ],
        "summary": "Add group to blackList",
        "description": "Adds a particular group to blackList.",
        "operationId": "addGroupToBlackList",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlacklistGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BlackLists"
        ],
        "summary": "Delete group from blackList",
        "description": "Deletes a particular group from blackList.",
        "operationId": "deleteGroupFromBlackList",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlacklistGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/blacklist/contact": {
      "put": {
        "tags": [
          "BlackLists"
        ],
        "summary": "Add contact to blackList",
        "description": "Adds a particular contact to blackList.",
        "operationId": "addContacttoBlackList",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlacklistContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BlackLists"
        ],
        "summary": "Delete contact from blackList",
        "description": "Deletes a particular contact from blackList.",
        "operationId": "deleteContactfromBlackList",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlacklistContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Queries all categories",
        "description": "This method is used to query all categories.",
        "operationId": "GetCategories",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/categories/{categoryId}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Queries a category",
        "description": "This method is used to query a category identified by {categoryId}.",
        "operationId": "GetCategory",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Resultset",
            "in": "header",
            "description": "Resultset of the content.Default value is Detail.  Possible values are;\n- Simple\n- Detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Identifier of the Category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CategoryContent"
                    },
                    {
                      "$ref": "#/components/schemas/ExtendedCategoryContent"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/categories/my": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Queries the my Categories.",
        "description": "This method is used to get my Categories.",
        "operationId": "GetMyCategories",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the category query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Artists are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyCategories"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/confirmations": {
      "put": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Returns the result of confirmation",
        "description": "This method is used to return the result of service confirmation.",
        "operationId": "PutConfirmationResult",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmationResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmation Result is Returned",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact",
        "description": "Gets contact attributes for a particular contact.",
        "operationId": "getContact",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Contact id to retrieve contact attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact",
        "description": "Updates contact attributes for a particular contact.",
        "operationId": "putContact",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Contact id to update contact attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-123-1234"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "description": "Deletes a particular contact.",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "contact id to delete contact.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts releted with user",
        "description": "Get all contacts and their attributes releted with user.",
        "operationId": "getContacts",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "description": "Creates a user defined contact",
        "operationId": "postContact",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events/{id}/tone": {
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Cancel tone assignment from event",
        "description": "Cancels tone assignments from any user defined event.",
        "operationId": "deleteToneforEvent",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events/{id}/signature/{signature}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Assign signature to event",
        "description": "Assigns a user defined signature to any user defined event.",
        "operationId": "putSignatureforEvent",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          },
          {
            "name": "signature",
            "in": "path",
            "description": "Signature id assigned to event.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Meeting"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events/{id}/signature": {
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Cancel signature assignment from event",
        "description": "Cancels signature assignment from any user defined event.",
        "operationId": "deleteSignatureforEvent",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event",
        "description": "Gets event attributes for a particular event.",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id to retrieve event attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Update event",
        "description": "Updates event attributes for a particular event.",
        "operationId": "putEvent",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id to update event attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete event",
        "description": "Deletes a particular event.",
        "operationId": "deleteEvent",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id to delete event.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events/{id}/tone/{tone}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Assign tone to event",
        "description": "Assigns a subscribed tone to any user defined event.",
        "operationId": "putToneforEvent",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Event id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "eventId"
          },
          {
            "name": "tone",
            "in": "path",
            "description": "Tone id assigned to event.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 121314
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get all events",
        "description": "Get all events and their attributes.",
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create event",
        "description": "Creates a user defined event",
        "operationId": "postEvent",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/follows": {
      "get": {
        "tags": [
          "Follow"
        ],
        "summary": "Get all followed contents by User.",
        "description": "Get all followed contents by User.",
        "operationId": "getFollows",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Follow content retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFollowsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/follows/{contentId}": {
      "put": {
        "tags": [
          "Follow"
        ],
        "summary": "Adds new content to the follow.",
        "description": "This method is used to adds new content to the follow.",
        "operationId": "putFollow",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "description": "Identifier of the content",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Follow"
        ],
        "summary": "Delete Follow",
        "description": "Deletes a particular follow.",
        "operationId": "deleteFollow",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "description": "Identifier of the followed content",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "contentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups/{id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group",
        "description": "Gets group attributes for a particular group.",
        "operationId": "getGroup",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id to retrieve group attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update group",
        "description": "Updates group attributes for a particular group.",
        "operationId": "putGroup",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id to update group attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-123-1234"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete group",
        "description": "Deletes a particular group.",
        "operationId": "deleteGroup",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id to delete group.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups/{id}/tone": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Cancel tone assignment from group",
        "description": "Cancels tone assignments from any user defined group.",
        "operationId": "deleteGroupTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups/{id}/signature": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Cancel signature assignment from group",
        "description": "Cancels signature assignment from any user defined group.",
        "operationId": "deleteGroupSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get all groups",
        "description": "Get all groups and their attributes.",
        "operationId": "getGroups",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create group",
        "description": "Creates a user defined group",
        "operationId": "postGroup",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups/{id}/signature/{signature}": {
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Assign signature to group",
        "description": "Assigns a user defined signature to any user defined group.",
        "operationId": "putGroupSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          },
          {
            "name": "signature",
            "in": "path",
            "description": "Signature id assigned to group.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Meeting"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/groups/{id}/tone/{tone}": {
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Assign tone to group",
        "description": "Assigns a subscribed tone to any user defined group.",
        "operationId": "putGroupTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Group id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "groupId"
          },
          {
            "name": "tone",
            "in": "path",
            "description": "Tone id assigned to group.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 121314
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get location",
        "description": "Get geolocation of a subscriber.",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update Location",
        "description": "Updates current geolocation of a subscriber",
        "operationId": "putLocation",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/moods/moods/{moodId}": {
      "get": {
        "tags": [
          "Mood"
        ],
        "summary": "Queries a mood",
        "description": "This method is used to query a mood identified by {moodId}.",
        "operationId": "GetMood",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Resultset",
            "in": "header",
            "description": "Resultset of the content.Default value is Detail.  Possible values are;\n- Simple\n- Detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moodId",
            "in": "path",
            "description": "Identifier of the Mood",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mood is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MoodContent"
                    },
                    {
                      "$ref": "#/components/schemas/ExtendedMoodContent"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/moods": {
      "get": {
        "tags": [
          "Mood"
        ],
        "summary": "Queries the moods matching to the key param",
        "description": "This method is used to query all moods.",
        "operationId": "GetMoods",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/moods/my": {
      "get": {
        "tags": [
          "Mood"
        ],
        "summary": "Queries the my Moods.",
        "description": "This method is used to get my Moods.",
        "operationId": "GetMyMoods",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the mood query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyMoods"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/redirectedURI/authcallback": {
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "This is the client server's redirect end point.",
        "description": "This is the client server's redirect end point.",
        "operationId": "authCallback",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/externelresource/getmsisdnlist": {
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Get External Resource Msisdn list",
        "description": "Get External Resource Msisdn list",
        "operationId": "getExternelResourcesMsisdnlist",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MsisdnObjectExternal"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/externelresource/activeline": {
      "post": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Switch Between Lines",
        "description": "Switch Between Lines",
        "operationId": "getExternalResourcesActiveLine",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetExternalResourcesActiveLineRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExternalCustomerActiveLineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/authendpoint": {
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Get User Resource Server Login URL.",
        "description": "Get User Resource Server Login URL. ",
        "operationId": "getAuthEndPoint",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/externelresource/refreshtoken": {
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Refresh Token",
        "description": "Refresh Token",
        "operationId": "getExternelResourcesRefreshToken",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/oauth/externelresource/logout": {
      "get": {
        "tags": [
          "Oauth2"
        ],
        "summary": "Logout System",
        "description": "Logout System",
        "operationId": "getExternelResourcesLogout",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "token.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes/getsalattimesbyregionname": {
      "get": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Get salat times depends on region",
        "description": "Get salat times depends on region",
        "operationId": "GetSalatTimesbyRegionName",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRegionNameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Salat times retrieved depends on region name.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalatTimesbyRegionNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes/getsalattimesbylocation": {
      "get": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Get salat times depends on location",
        "description": "Get salat times depends on location",
        "operationId": "GetSalatTimesbyLocation",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSalatTimesbyLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Salat times retrieved depends on location.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSalatTimesbyLocationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes/{prayertime}": {
      "put": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Update Prayer Time tone",
        "description": "Updates Prayer Time tone attributes for a particular prayer time.",
        "operationId": "putPrayerTimeTone",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prayertime",
            "in": "path",
            "description": "this parameter shows which prayer time tone will be assigned. Possible values are;\n- morning\n- noon\n- afternoon\n- evening\n- night",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "prayertime"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutPrayerTimeToneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Prayer Time tone is changed",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes": {
      "get": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Get Prayer Times and tones informations of user.",
        "description": "Get Prayer Times and tones informations of user.",
        "operationId": "getUserPrayerTimes",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prayer Times informations retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrayerTimes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes/getregionnamebylocation": {
      "get": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Get Region name depends on location",
        "description": "Get Region name depends on location",
        "operationId": "GetRegionNamebyLocation",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRegionNamebyLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Region name retrieved depends on location.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegionNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/prayertimes/{regionId}": {
      "get": {
        "tags": [
          "Prayer Times"
        ],
        "summary": "Get Prayer Times and tones informations.",
        "description": "Get Prayer Times and tones informations.",
        "operationId": "getPrayerTimes",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionId",
            "in": "path",
            "description": "Identifier of the region",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "regionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Prayer Times informations retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrayerTimes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/promoted/tones": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted tones",
        "description": "This method is used to query promoted tones. Promoted tones are marked on Content Management System.",
        "operationId": "GetPromotedTones",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToneContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/promoted/moods": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted moods",
        "description": "This method is used to query promoted moods. Promoted moods are marked on Content Management System.",
        "operationId": "GetPromotedMoods",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/promoted/albums": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted albums",
        "description": "This method is used to query promoted albums. Promoted albums are marked on Content Management System.",
        "operationId": "GetPromotedAlbums",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedAlbumContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/promoted/categories": {
      "get": {
        "tags": [
          "Promoted"
        ],
        "summary": "Queries promoted categories",
        "description": "This method is used to query promoted categories. Promoted categories are marked on Content Management System.",
        "operationId": "GetPromotedCategories",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/recommendation/tones": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Queries recommended tones",
        "description": "This method is used to query recommended tones.",
        "operationId": "GetRecommendedTones",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommended Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToneContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/recommendation/albums": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Queries recommended Albums",
        "description": "This method is used to query recommended Albums.",
        "operationId": "GetRecommendedAlbums",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedAlbumContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/recommendation/categories": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Queries recommended Categories",
        "description": "This method is used to query recommended Categories.",
        "operationId": "GetRecommendedCategories",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommended Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/recommendation/moods": {
      "get": {
        "tags": [
          "Recommendation"
        ],
        "summary": "Queries recommended Moods",
        "description": "This method is used to query recommended Moods.",
        "operationId": "GetRecommendedMoods",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recommended Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Queries the offers",
        "description": "This method is used to query all offers.",
        "operationId": "GetServiceOffers",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offers are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/services/my": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Queries the my Services.",
        "description": "This method is used to get my Services.",
        "operationId": "GetMyServices",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Services are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyServices"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/signatures/box": {
      "get": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get signature Boxes",
        "description": "Gets signature Boxes.",
        "operationId": "getSignatureBoxes",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SignatureBox"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Signatures"
        ],
        "summary": "Create Predefined signature box.",
        "description": "Creates a Predefined signature box.",
        "operationId": "postPredefinedSignatureBox",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureBox"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/signatures/box/{id}": {
      "get": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get signature Box",
        "description": "Gets signature Box.",
        "operationId": "getSignatureBox",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Signature Box id to retrieve signature attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureBoxId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureBox"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Signatures"
        ],
        "summary": "Delete Predefined signature Box",
        "description": "Deletes a particular Predefined signature Box.",
        "operationId": "deletePredefinedSignatureBox",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Signature box id to delete signature.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/signatures/{id}": {
      "get": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get signature",
        "description": "Gets signature attributes for a particular signature.",
        "operationId": "getSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Signature id to retrieve signature attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signature"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Signatures"
        ],
        "summary": "Update signature",
        "description": "Updates signature attributes for a particular signature.",
        "operationId": "putSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Signature id to update signature attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Signature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Signatures"
        ],
        "summary": "Delete Predefined signature",
        "description": "Deletes a particular Predefined signature.",
        "operationId": "deletePredefinedSignature",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Signature id to delete signature.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/signatures": {
      "get": {
        "tags": [
          "Signatures"
        ],
        "summary": "Get all signatures",
        "description": "Get all signature and their attributes.",
        "operationId": "getSignatures",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Signature"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Signatures"
        ],
        "summary": "Create signature",
        "description": "Creates a user defined signature",
        "operationId": "postSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Signature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSignatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/signatures/box/{signatureBoxId}": {
      "put": {
        "tags": [
          "Signatures"
        ],
        "summary": "Update Predefined signature Box",
        "description": "Updates Predefined signature attributes for a particular signature Box.",
        "operationId": "putPredefinedSignatureBox",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signatureBoxId",
            "in": "path",
            "description": "SignatureBox id to update signature attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "signatureBoxId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignatureBox"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/specialconditionassignment": {
      "get": {
        "tags": [
          "SpecialConditionAssignments"
        ],
        "summary": "Get Special Condition Assignment",
        "description": "Get special condition assignments which already assign to subscriber profile.",
        "operationId": "getSpecialConditionAssignment",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialConditionAssignment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpecialConditionAssignments"
        ],
        "summary": "Assign a special condition to subscriber profile.",
        "description": "Assign a special condition to subscriber profile.",
        "operationId": "putSpecialConditionAssignment",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialConditionAssignment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSpecialConditionAssignmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SpecialConditionAssignments"
        ],
        "summary": "cancel assignment",
        "description": "Deletes a particular special condition assignment.",
        "operationId": "deleteSpecialConditionAssignment",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/specialcondition": {
      "get": {
        "tags": [
          "SpecialCondition"
        ],
        "summary": "Get all specialConditions",
        "description": "Get all specialConditions and their attributes.",
        "operationId": "getSpecialConditions",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpecialCondition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SpecialCondition"
        ],
        "summary": "Create specialCondition",
        "description": "Creates a user defined specialCondition",
        "operationId": "postSpecialCondition",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/specialcondition/{id}": {
      "get": {
        "tags": [
          "SpecialCondition"
        ],
        "summary": "Get specialCondition",
        "description": "Gets specialCondition attributes for a particular specialCondition.",
        "operationId": "getSpecialCondition",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "SpecialCondition id to retrieve specialCondition attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "specialConditionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecialCondition"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SpecialCondition"
        ],
        "summary": "Update specialCondition",
        "description": "Updates specialCondition attributes for a particular specialCondition.",
        "operationId": "putSpecialCondition",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "SpecialCondition id to update specialCondition attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "specialConditionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpecialCondition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SpecialCondition"
        ],
        "summary": "Delete specialCondition",
        "description": "Deletes a particular specialCondition.",
        "operationId": "deleteSpecialCondition",
        "parameters": [
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "SpecialCondition id to delete specialCondition.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "specialConditionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribes/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Queries a service offer subscription",
        "description": "This method is used to query a service offer subscription of a subscriber identified with {san}.",
        "operationId": "getServiceSubscribeBySubscriptionId",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id to retrieve Subscribed Service.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribedService"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribes/content/{subscriptionId}": {
      "get": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Queries a content offer subscription",
        "description": "This method is used to query a content offer subscription of a subscriber identified with {san}.",
        "operationId": "getContentSubscribeBySubscriptionId",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id to retrieve subscribed content.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribedContent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Updates a content offer subscription",
        "description": "This method is used to update a content offer subscription.",
        "operationId": "putContentSubscribe",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Identifier of the Subscription",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "subscriptionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribes/content": {
      "post": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Initiates a new content subscription",
        "description": "This method is used to initiate a new content subscription.",
        "operationId": "postContentSubscribe",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribes/service": {
      "post": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Initiates a new service offer subscription",
        "description": "This method is used to initiate a new service offer subscription.",
        "operationId": "postServiceSubscribe",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostServiceSubscribeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribes/service/{subscriptionId}": {
      "put": {
        "tags": [
          "Subscribe"
        ],
        "summary": "Updates a service offer subscription",
        "description": "This method is used to update a service offer subscription.",
        "operationId": "putServiceSubscribe",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Identifier of the Subscription",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "subscriptionId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/getsubscriptionlistinfo": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "get Subscription List Info",
        "description": "This method is used to get Subscription List Info.",
        "operationId": "getSubscriptionListInfo",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionListInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/campaigneligibility": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user Campaign eligibility.",
        "description": "This method is used to query for user Campaign eligibility.",
        "operationId": "getMyCampaignEligibility",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyCampaignEligibilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/defaulttone": {
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user Default Tone",
        "description": "This method is used to update user Default Tone.",
        "operationId": "putMyDefaultTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyDefaultToneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/language": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user language.",
        "description": "This method is used to query for user language.",
        "operationId": "getMyLanguage",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyLanguageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user language",
        "description": "This method is used to update user language.",
        "operationId": "putMyLanguage",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyLanguageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/regionid": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user Region Id.",
        "description": "This method is used to query for user Region Id.",
        "operationId": "getMyRegionId",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyRegionIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user region Id",
        "description": "This method is used to update user region Id.",
        "operationId": "putMyRegionId",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyRegionIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/activedefaulttone": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user Default Tone.",
        "description": "This method is used to query for user Default Tone.",
        "operationId": "getMyActiveDefaultTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyActiveDefaultToneResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user default tone",
        "description": "This method is used to update user default tone.",
        "operationId": "putMyActiveDefaultTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyActiveDefaultToneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/activedefaultsignature": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user Default Signature.",
        "description": "This method is used to query for user Default Signature.",
        "operationId": "getMyActiveDefaultSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyActiveDefaultSignatureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user default signature",
        "description": "This method is used to update user default signature.",
        "operationId": "putMyActiveDefaultSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyActiveDefaultSignatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/firstlogin": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries user is first login.",
        "description": "This method is used to query for user is first login.",
        "operationId": "getMyFirstLogin",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Album is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyFirstLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Update user first login",
        "description": "This method is used to update user first login.",
        "operationId": "putMyFirstLogin",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMyFirstLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/subscribers/my/info": {
      "get": {
        "tags": [
          "Subscriber"
        ],
        "summary": "Queries Subscriber Info.",
        "description": "This method is used to query for Subscriber Info.",
        "operationId": "getMyInfo",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "This parameter is used to track the user of the API; log purposes only.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriber Info is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscriber"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/getpostpaidCI": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Get Postpaid CI",
        "description": "Get Postpaid CI",
        "operationId": "getPostpaidCI",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInformation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/sendNotification/{token}": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Send Notification",
        "description": "Send Notification",
        "operationId": "SendNotification",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/createallusers": {
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Create CI for test",
        "description": "Create CI for test",
        "operationId": "createUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerInformation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/getprepaidCI": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Get Prepaid CI",
        "description": "Get Prepaid CI",
        "operationId": "getPrepaidCI",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInformation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/getmultilinedCI": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Get Multi Line CI",
        "description": "Get Multi Line CI",
        "operationId": "getMultilinedCI",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInformation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/gettokenforCI/{key}": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Get token for Customer Information",
        "description": "Get token for Customer Information",
        "operationId": "getTokenforCI",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234-123-12345-12345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth2Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tests/validationresponse": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Get ValidationResponse",
        "description": "Get ValidationResponse",
        "operationId": "getValidationResponse",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth2Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes/{id}": {
      "get": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Get timeframe",
        "description": "Gets timeframe attributes for a particular timeframe.",
        "operationId": "getTimeFrame",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id to retrieve timeframe attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeFrame"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Update timeframe",
        "description": "Updates timeframe attributes for a timeframe timeframe.",
        "operationId": "putTimeFrame",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id to update timeframe attributes.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeFrame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Delete timeframe",
        "description": "Deletes a particular timeframe.",
        "operationId": "deleteTimeFrame",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id to delete timeframe.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes/{id}/tone/{tone}": {
      "put": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Assign tone to timeframe",
        "description": "Assigns a subscribed tone to any user defined timeframe.",
        "operationId": "putTimeFrameTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          },
          {
            "name": "tone",
            "in": "path",
            "description": "Tone id assigned to timeframe.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 121314
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes/{id}/tone": {
      "delete": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Cancel tone assignment from timeframe",
        "description": "Cancels tone assignment from any user defined timeframe.",
        "operationId": "deleteTimeFrameTone",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes/{id}/signature/{signature}": {
      "put": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Assign signature to timeframe",
        "description": "Assigns a user defined signature to any user defined timeframe.",
        "operationId": "putTimeFrameSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          },
          {
            "name": "signature",
            "in": "path",
            "description": "Signature id assigned to timeframe.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Meeting"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes/{id}/signature": {
      "delete": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Cancel signature assignment from timeframe",
        "description": "Cancels signature assignment from any user defined timeframe.",
        "operationId": "deleteTimeFrameSignature",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "TimeFrame id.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "timeFrameId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/timeframes": {
      "get": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Get all timeframes",
        "description": "Get all timeframes and their attributes.",
        "operationId": "getTimeFrames",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeFrame"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TimeFrames"
        ],
        "summary": "Create timeframe",
        "description": "Creates a user defined timeframe",
        "operationId": "postTimeFrame",
        "parameters": [
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-TransactionId",
            "in": "header",
            "description": "This parameter is used to track the API method transaction; log purposes only. It is meaningful for POST and PUT methods; in RBT APIs. Maximum length can be 128 chars.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeFrame"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTimeFrameResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tones/my": {
      "get": {
        "tags": [
          "Tones"
        ],
        "summary": "Queries the my tones.",
        "description": "This method is used to get my albums.",
        "operationId": "GetMyTones",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Msisdn",
            "in": "header",
            "description": "MSISDN of the subscriber/user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the tone query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "My Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyTones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tones/{toneId}": {
      "get": {
        "tags": [
          "Tones"
        ],
        "summary": "Queries a tone",
        "description": "This method is used to query a tone identified by {toneId}.",
        "operationId": "GetTone",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Resultset",
            "in": "header",
            "description": "Resultset of the content.Default value is Detail.  Possible values are;\n- Simple\n- Detail",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toneId",
            "in": "path",
            "description": "Identifier of the tone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tone is Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ToneContent"
                    },
                    {
                      "$ref": "#/components/schemas/ExtendedToneContent"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/tones": {
      "get": {
        "tags": [
          "Tones"
        ],
        "summary": "Queries the tones matching to the key param",
        "description": "This method is used to query tones matching to the {key} parameter.",
        "operationId": "GetTones",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Key of the tone query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "This parameter is used to sort search query. Possible values are;\n- Name\n- Popularity\n- Newest\n- Oldest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToneContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/trending/albums": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending albums",
        "description": "This method is used to query trending albums. Top 5 albums with more than 100 subscriptions within one week.",
        "operationId": "GetTrendingAlbums",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Albums are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlbumContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/trending/categories": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending categories",
        "description": "This method is used to query trending categories. Top 5 categories with more than 100 subscriptions within one week.",
        "operationId": "GetTrendingCategories",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Categories are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/trending/moods": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending moods",
        "description": "This method is used to query trending moods. Top 5 moods with more than 100 subscriptions within one week.",
        "operationId": "GetTrendingMoods",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Moods are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoodContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/rbt/trending/tones": {
      "get": {
        "tags": [
          "Trending"
        ],
        "summary": "Queries trending tones",
        "description": "This method is used to query trending tones. Top 5 tones with more than 100 subscriptions within one week.",
        "operationId": "GetTrendingTones",
        "parameters": [
          {
            "name": "X-Language",
            "in": "header",
            "description": "Language of the content.  Possible values are;\n- EN\n- AR",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Channel",
            "in": "header",
            "description": "This parameter is used to track the channel of the request. Possible values are;\n- IVR\n- USSD\n- SMS\n- RBTMobileApp\n- RBTSubscriberPortal\n- MobilyMobileApp\n- MobilyEPortal\n- OTHER",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Username",
            "in": "header",
            "description": "User name of the API, log purposes only",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trending Tones are Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ToneContent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ExtendedArtistContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedAlbumContent"
            }
          },
          "tones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          }
        },
        "description": "Extended Artist Content"
      },
      "PutPrayerTimeToneRequest": {
        "required": [
          "toneUrl"
        ],
        "type": "object",
        "properties": {
          "toneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          }
        }
      },
      "ExtendedCategoryContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedAlbumContent"
            }
          },
          "tones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          }
        },
        "description": "Extended Category Content"
      },
      "PutMyActiveDefaultToneRequest": {
        "type": "object",
        "properties": {
          "tone": {
            "$ref": "#/components/schemas/ToneContent"
          }
        }
      },
      "CustomerInformation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "accountInfo": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "roleId": {
            "type": "integer"
          },
          "accessType": {
            "type": "string"
          },
          "dataSIM": {
            "type": "boolean"
          },
          "msisdnObjectList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MsisdnObjectExternal"
            }
          }
        },
        "description": "CustomerInformation"
      },
      "SignatureBox": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the SignatureBox"
          },
          "alias": {
            "type": "string",
            "description": "Alias of the Signature"
          },
          "signatureList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Signature"
            }
          }
        },
        "description": "SignatureBox"
      },
      "PutSubscriptionRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Possible values are:\n- Suspend\n- Unsuspend\n- Activate\n- Inactivate",
            "example": "Activate"
          }
        }
      },
      "ContentSubscriptionRequest": {
        "required": [
          "contentId",
          "giftPaymentShape",
          "giftReceiverLanguage",
          "isGift",
          "language",
          "subscriptionType"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string",
            "description": "Identifier of the content",
            "example": 40001
          },
          "subscriptionType": {
            "type": "string",
            "description": "Possible values are;\n- Tone\n- Album\n- Artist\n- Category\n- Mood",
            "example": "Tone"
          },
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          },
          "isGift": {
            "type": "boolean",
            "description": "Flag identifiying the gift status of subscription. If \"isGift\" is true, \"giftReceiverLanguage\", \"giftReceiver\" and \"paymentShape\" information will be required."
          },
          "giftReceiverLanguage": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          },
          "giftReceiver": {
            "type": "string",
            "description": "MSISDN of the gift receiver",
            "example": 966561234567
          },
          "giftPaymentShape": {
            "type": "string",
            "description": "Possible values are:\n- All\n- Initial",
            "example": "All"
          }
        },
        "description": "Content Subscription Request"
      },
      "PostGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "SpecialCondition": {
        "required": [
          "icon",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "toneforMan": {
            "type": "string"
          },
          "toneforWoman": {
            "type": "string"
          },
          "defaultDurationInMiliseconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Special Conditions for My Profile Service."
      },
      "Subscriber": {
        "required": [
          "customerName",
          "imsi",
          "language",
          "msisdn",
          "paymentType",
          "san",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "msisdn": {
            "type": "string",
            "description": "MSISDN of the subscriber",
            "example": 966564051757
          },
          "san": {
            "type": "string",
            "description": "Subscriber Account Number",
            "example": 1001236563194353
          },
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- ACTIVE\n- INACTIVE",
            "example": "ACTIVE"
          },
          "paymentType": {
            "type": "string",
            "description": "Possible values are:\n- Prepaid\n- Postpaid",
            "example": "Prepaid"
          },
          "customerName": {
            "type": "string",
            "description": "Name of the subscriber",
            "example": "Customer Name"
          },
          "imsi": {
            "type": "string",
            "description": "IMSI of the subscriber",
            "example": 420032332534811
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyAndValue"
            }
          },
          "isFirstLogin": {
            "type": "boolean"
          }
        },
        "description": "Defined All Subscriber."
      },
      "ToneContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "length",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "toneUrl",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "toneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "length": {
            "type": "integer",
            "description": "Lenght of the tone",
            "example": 32
          }
        },
        "description": "ToneContent"
      },
      "GetSalatTimesbyLocationResponse": {
        "type": "object",
        "properties": {
          "salatTime": {
            "$ref": "#/components/schemas/SalatTime"
          }
        }
      },
      "SpecialConditionAssignment": {
        "required": [
          "conditionId",
          "durationInMiliseconds",
          "endDate",
          "id",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "conditionId": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "durationInMiliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "endDate": {
            "pattern": "ddMMyyyyThhmm",
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Special Condition Assignment for a user."
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer"
          },
          "minute": {
            "type": "integer"
          },
          "second": {
            "type": "integer"
          },
          "nano": {
            "type": "integer"
          }
        }
      },
      "MyCategories": {
        "type": "object",
        "properties": {
          "subscribedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedCategory"
            }
          },
          "followingCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryContent"
            }
          },
          "historyCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedCategory"
            }
          }
        },
        "description": "My Categories"
      },
      "PostTimeFrameResponse": {
        "type": "object",
        "properties": {
          "timeFrameId": {
            "type": "string"
          }
        }
      },
      "GetRegionNameResponse": {
        "type": "object",
        "properties": {
          "regionName": {
            "type": "string"
          }
        }
      },
      "GetExternalResourcesActiveLineRequest": {
        "type": "object",
        "properties": {
          "serviceAcctNumber": {
            "type": "string"
          },
          "msisdn": {
            "type": "string"
          }
        }
      },
      "PostSignatureResponse": {
        "type": "object",
        "properties": {
          "signatureId": {
            "type": "string"
          }
        }
      },
      "GetRegionNamebyLocationRequest": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "GetRegionNamebyLocationRequest"
      },
      "SubscribedAlbum": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistContent"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryContent"
            }
          },
          "moods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoodContent"
            }
          },
          "tones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Album Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Album"
      },
      "MyServices": {
        "type": "object",
        "properties": {
          "subscribedService": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedService"
            }
          }
        },
        "description": "My Services"
      },
      "MyArtists": {
        "type": "object",
        "properties": {
          "subscribedArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedArtist"
            }
          },
          "followingArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistContent"
            }
          },
          "historyArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedArtist"
            }
          }
        },
        "description": "My Artists"
      },
      "GiftsTone": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "giftPaymentShape",
          "giftReceiver",
          "giftSender",
          "giftState",
          "id",
          "length",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "toneUrl",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "toneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "length": {
            "type": "integer",
            "description": "Lenght of the tone",
            "example": 32
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Tone Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          },
          "giftSender": {
            "type": "string",
            "description": "MSISDN of the gift sender",
            "example": 966561234567
          },
          "giftReceiver": {
            "type": "string",
            "description": "MSISDN of the gift receiver",
            "example": 966561234568
          },
          "giftPaymentShape": {
            "type": "string",
            "description": "Possible values are:\n- All\n- Initial",
            "example": "All"
          },
          "giftState": {
            "type": "string",
            "description": "Possible values are:\n- Approved\n- Pending\n- Rejected",
            "example": "Active"
          }
        },
        "description": "GiftsTone"
      },
      "GetMyActiveDefaultToneResponse": {
        "type": "object",
        "properties": {
          "tone": {
            "$ref": "#/components/schemas/ToneContent"
          }
        }
      },
      "PostSubscriptionResponse": {
        "required": [
          "subscriptionId"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the subscription."
          }
        }
      },
      "GetMyFirstLoginResponse": {
        "type": "object",
        "properties": {
          "firstLogin": {
            "type": "boolean"
          }
        }
      },
      "GetFollowsResponse": {
        "required": [
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "string",
            "description": "Identifier of the content."
          }
        }
      },
      "PostServiceSubscribeRequest": {
        "required": [
          "language",
          "offerId"
        ],
        "type": "object",
        "properties": {
          "offerId": {
            "type": "string",
            "description": "Identifier of the service offer",
            "example": 40001
          },
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          }
        },
        "description": "Post Service Subscribe Request"
      },
      "SubscribedArtist": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Artist Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Artist"
      },
      "GetMyRegionIdResponse": {
        "type": "object",
        "properties": {
          "regionId": {
            "type": "string"
          }
        }
      },
      "TimeFrame": {
        "required": [
          "id",
          "name",
          "reoccurrence",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "reoccurrence": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY",
                "SUNDAY"
              ]
            }
          },
          "toneId": {
            "type": "string"
          },
          "signatureId": {
            "type": "string"
          }
        },
        "description": "User defined time frame with RBT attributes."
      },
      "Group": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "line": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "toneId": {
            "type": "string"
          },
          "signatureId": {
            "type": "string"
          },
          "contactMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupContact"
            }
          }
        },
        "description": "User defined group with RBT attributes."
      },
      "KeyAndValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ArtistContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          }
        },
        "description": "Artist Content"
      },
      "MyAlbums": {
        "type": "object",
        "properties": {
          "subscribedAlbums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedAlbum"
            }
          },
          "followingAlbums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlbumContent"
            }
          },
          "historyAlbums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedAlbum"
            }
          }
        },
        "description": "My Albums"
      },
      "PrayerTimes": {
        "required": [
          "afternoonPrayTime",
          "afternoonToneUrl",
          "eveningPrayTime",
          "eveningToneUrl",
          "morningPrayTime",
          "morningToneUrl",
          "nightPrayTime",
          "nightToneUrl",
          "noonPrayTime",
          "noonToneUrl"
        ],
        "type": "object",
        "properties": {
          "morningToneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "noonToneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "afternoonToneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "eveningToneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "nightToneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "morningPrayTime": {
            "type": "object",
            "properties": {
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "second": {
                "type": "integer"
              },
              "nano": {
                "type": "integer"
              }
            },
            "description": "Time of morning pray.",
            "example": "04:12:28.580969"
          },
          "noonPrayTime": {
            "type": "object",
            "properties": {
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "second": {
                "type": "integer"
              },
              "nano": {
                "type": "integer"
              }
            },
            "description": "Time of noon pray.",
            "example": "12:43:12.254253"
          },
          "afternoonPrayTime": {
            "type": "object",
            "properties": {
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "second": {
                "type": "integer"
              },
              "nano": {
                "type": "integer"
              }
            },
            "description": "Time of afternoon pray.",
            "example": "16:24:13.12432"
          },
          "eveningPrayTime": {
            "type": "object",
            "properties": {
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "second": {
                "type": "integer"
              },
              "nano": {
                "type": "integer"
              }
            },
            "description": "Time of evening pray.",
            "example": "19:37:28.54123"
          },
          "nightPrayTime": {
            "type": "object",
            "properties": {
              "hour": {
                "type": "integer"
              },
              "minute": {
                "type": "integer"
              },
              "second": {
                "type": "integer"
              },
              "nano": {
                "type": "integer"
              }
            },
            "description": "Time of night pray.",
            "example": "21:07:28.876521"
          }
        },
        "description": "PrayerTimes"
      },
      "GetRegionNameRequest": {
        "required": [
          "regionName"
        ],
        "type": "object",
        "properties": {
          "regionName": {
            "type": "string"
          }
        },
        "description": "GetRegionNameRequest"
      },
      "BlackList": {
        "required": [
          "offerId"
        ],
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "offerId": {
            "type": "string",
            "description": "Identifier of the Service Id"
          }
        },
        "description": "User defined Black List."
      },
      "GetMyLanguageResponse": {
        "required": [
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          }
        }
      },
      "GetSalatTimesbyRegionNameResponse": {
        "type": "object",
        "properties": {
          "salatTime": {
            "$ref": "#/components/schemas/SalatTime"
          }
        }
      },
      "PostContactResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "PutMyRegionIdRequest": {
        "type": "object",
        "properties": {
          "regionId": {
            "type": "string"
          }
        }
      },
      "MoodContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          }
        },
        "description": "Mood Content"
      },
      "BlacklistGroupRequest": {
        "required": [
          "groupId",
          "offerId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          }
        }
      },
      "PutMyActiveDefaultSignatureRequest": {
        "type": "object",
        "properties": {
          "signature": {
            "$ref": "#/components/schemas/Signature"
          }
        }
      },
      "PutMyLanguageRequest": {
        "required": [
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR",
            "example": "EN"
          }
        }
      },
      "GetMyActiveDefaultSignatureResponse": {
        "type": "object",
        "properties": {
          "signature": {
            "$ref": "#/components/schemas/Signature"
          }
        }
      },
      "SubscribedService": {
        "required": [
          "offerId",
          "offerName",
          "state",
          "subscriptionId",
          "price"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Service Subscribtion",
            "example": 123124124
          },
          "offerId": {
            "type": "string",
            "description": "Identifier of the Service",
            "example": 10001
          },
          "offerName": {
            "type": "string",
            "description": "Possible values are:\n- RBT\n- PrayerTimes\n- ProfileService\n- MySignature",
            "example": "PrayerTimes"
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "failureReason": {
            "type": "string",
            "description": "Failure reason for the \"Inactive\" state. Possible values are:\n- SubscriberNotEligible\n- SubscriberInBlackList\n- ServiceInactive\n- OfferInactive\n- MaxFailedChargingAttemptCountExceeded\n- InsufficientCredit\n- SubscriberNotActive\n- InactivatedBySubscriber\n- SubscriptionDurationEnded\n- OfferLastSubscriptionDatePassed\n- OfferFirstSubscriptionDateNotReached\n- OfferSuspended\n- ServiceSuspended\n- DobNotAllowed\n- MicroChargingDurationEnds\n- HlrProvisioningError",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          },
          "price": {
            "type": "string",
            "description": "Price of the Service",
            "example": 5
          },
          "defaultContent": {
            "type": "string",
            "description": "This field will return:\n- Active Default Tone name for RBT offer\n- Default Signature for MySignature offer"
          }
        },
        "description": "Subscribed Service"
      },
      "MyMoods": {
        "type": "object",
        "properties": {
          "subscribedMoods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedMood"
            }
          },
          "followingMoods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoodContent"
            }
          },
          "historyMoods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedMood"
            }
          }
        },
        "description": "My Moods"
      },
      "MyTones": {
        "type": "object",
        "properties": {
          "subscribedTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedTone"
            }
          },
          "receivedGiftsTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GiftsTone"
            }
          },
          "sentGiftsTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GiftsTone"
            }
          },
          "historyTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedTone"
            }
          }
        },
        "description": "MyTones"
      },
      "GetSubscriptionListInfoResponse": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR"
          },
          "firstLogin": {
            "type": "boolean"
          },
          "subscribedAlbums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedAlbum"
            }
          },
          "subscribedArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedArtist"
            }
          },
          "subscribedCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedCategory"
            }
          },
          "subscribedMoods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedMood"
            }
          },
          "subscribedService": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedService"
            }
          },
          "subscribedTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscribedTone"
            }
          }
        }
      },
      "AlbumContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          }
        },
        "description": "Album Content"
      },
      "BlacklistContactRequest": {
        "required": [
          "msisdn",
          "offerId"
        ],
        "type": "object",
        "properties": {
          "msisdn": {
            "type": "string"
          },
          "offerId": {
            "type": "string"
          }
        }
      },
      "PutMyDefaultToneRequest": {
        "type": "object",
        "properties": {
          "toneId": {
            "type": "string"
          }
        }
      },
      "SubscribedTone": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "length",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "toneUrl",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "toneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "length": {
            "type": "integer",
            "description": "Lenght of the tone",
            "example": 32
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Tone Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Tone"
      },
      "CategoryContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          }
        },
        "description": "Category Content"
      },
      "GetMyCampaignEligibilityResponse": {
        "type": "object",
        "properties": {
          "campaignEligibility": {
            "type": "boolean"
          }
        }
      },
      "GetSalatTimesbyLocationRequest": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "GetSalatTimesbyLocationRequest"
      },
      "Error": {
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "description": "Defined Programmatic Errors.\nPossible errors:\n- 2001 - Content does not exist.\n- 1001 - Mandatory parameter \"parameter name\" is missing.\n- 1002 - Parameter \"parameter name\" is not valid.\n- 1003 - Subscriber does not exist.\n- 1004 - Subscription does not exist.\n- 1005 - Subscription already exists.\n- 9000 - System failure. Details: \"Error detail\"."
          },
          "message": {
            "type": "string"
          }
        },
        "description": "Defined Programmatic Errors."
      },
      "Service": {
        "required": [
          "chargingPeriod",
          "description",
          "id",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Service",
            "example": 10001
          },
          "name": {
            "type": "string",
            "description": "Possible values are:\n- RBT\n- PrayerTimes\n- ProfileService\n- MySignature",
            "example": "PrayerTimes"
          },
          "description": {
            "type": "string",
            "description": "Description of the Service",
            "example": "PrayerTimes Service Description"
          },
          "price": {
            "type": "string",
            "description": "Price of the Service",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Service",
            "example": "P000Y000M030DT00H00M00S"
          },
          "parentId": {
            "type": "string",
            "description": "Identifier of the parent Service",
            "example": 10002
          },
          "parentName": {
            "type": "string",
            "description": "Possible value is RBT",
            "example": "RBT"
          }
        },
        "description": "Service"
      },
      "ExtendedToneContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "gender",
          "id",
          "length",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "toneUrl",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "toneUrl": {
            "type": "string",
            "description": "URL of the tone in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "gender": {
            "type": "string",
            "description": "Possible values are:\n- Male\n- Female",
            "example": "Male"
          },
          "length": {
            "type": "integer",
            "description": "Lenght of the tone",
            "example": 32
          },
          "album": {
            "$ref": "#/components/schemas/ExtendedAlbumContent"
          },
          "artist": {
            "$ref": "#/components/schemas/ExtendedArtistContent"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryContent"
            }
          },
          "moods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoodContent"
            }
          },
          "similarTones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          }
        },
        "description": "Extended Tone Content"
      },
      "SubscribedContent": {
        "required": [
          "contentId",
          "contentName",
          "state",
          "subscriptionId",
          "subscriptionType"
        ],
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the subscription",
            "example": 123124124
          },
          "contentId": {
            "type": "string",
            "description": "Identifier of the content",
            "example": 10001
          },
          "contentName": {
            "type": "string",
            "description": "Name of the content",
            "example": "tone0001"
          },
          "subscriptionType": {
            "type": "string",
            "description": "Possible values are:\n- Tone\n- Album\n- Artist\n- Category\n- Mood",
            "example": "Tone"
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "failureReason": {
            "type": "string",
            "description": "Failure reason for the \"Inactive\" state. Possible values are:\n- SubscriberNotEligible\n- SubscriberInBlackList\n- ServiceInactive\n- OfferInactive\n- MaxFailedChargingAttemptCountExceeded\n- InsufficientCredit\n- SubscriberNotActive\n- InactivatedBySubscriber\n- SubscriptionDurationEnded\n- OfferLastSubscriptionDatePassed\n- OfferFirstSubscriptionDateNotReached\n- OfferSuspended\n- ServiceSuspended\n- DobNotAllowed\n- MicroChargingDurationEnds\n- HlrProvisioningError",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Content"
      },
      "GetExternalCustomerActiveLineResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "SalatTime": {
        "type": "object"
      },
      "PostSpecialConditionAssignmentResponse": {
        "type": "object",
        "properties": {
          "specialConditionAssignmentId": {
            "type": "string"
          }
        }
      },
      "ExtendedMoodContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedAlbumContent"
            }
          },
          "tones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          }
        },
        "description": "Extended Mood Content"
      },
      "Contact": {
        "required": [
          "msisdn"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "line": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "msisdn": {
            "type": "string"
          }
        },
        "description": "User contact attributes."
      },
      "GroupContact": {
        "required": [
          "msisdn"
        ],
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "msisdn": {
            "type": "string"
          }
        }
      },
      "ExtendedAlbumContent": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "subscriptionCode",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtistContent"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryContent"
            }
          },
          "moods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MoodContent"
            }
          },
          "tones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ToneContent"
            }
          }
        },
        "description": "Extended Album Content"
      },
      "ConfirmationResult": {
        "required": [
          "confirmationId",
          "result",
          "userText"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "Possible values are:\n- Confirmed\n- Denied",
            "example": "Confirmed"
          },
          "userText": {
            "type": "string",
            "description": "User selection for the confirmation",
            "example": "Yes"
          },
          "confirmationId": {
            "type": "string",
            "description": "Identifier of the confirmation request",
            "example": 1111
          }
        },
        "description": "Confirmation Result"
      },
      "SubscribedMood": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Mood Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Mood"
      },
      "SubscribedCategory": {
        "required": [
          "cardImage",
          "chargingPeriod",
          "currentSubscriptionCount",
          "description",
          "id",
          "name",
          "pageCoverImage",
          "price",
          "state",
          "subscriptionCode",
          "subscriptionId",
          "thumbnail",
          "updateTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Content",
            "example": 5555
          },
          "name": {
            "type": "string",
            "description": "Name of the Content.",
            "example": "Subscription List A"
          },
          "price": {
            "type": "string",
            "description": "Price of the Content.",
            "example": 5
          },
          "chargingPeriod": {
            "type": "string",
            "description": "Charging period of the Content.",
            "example": "P000Y000M030DT00H00M00S"
          },
          "currentSubscriptionCount": {
            "type": "integer",
            "description": "Active subscription count of the Content indicating popularity",
            "example": 1000
          },
          "updateTime": {
            "type": "string",
            "description": "Last update time of the Content in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "thumbnail": {
            "type": "string",
            "description": "Thumbnail of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "cardImage": {
            "type": "string",
            "description": "cardImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "pageCoverImage": {
            "type": "string",
            "description": "pageCoverImage of the Content in URL format",
            "example": "http://<dsp_cms_vip>/xxxx"
          },
          "subscriptionCode": {
            "type": "string",
            "description": "Subscription Code of Content.",
            "example": 11022
          },
          "description": {
            "type": "string",
            "description": "description of Content.",
            "example": "description of Content."
          },
          "tags": {
            "type": "string",
            "description": "tags of Content.",
            "example": "Islamic, Male Voice"
          },
          "defaultTone": {
            "$ref": "#/components/schemas/ToneContent"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Identifier of the Category Subscribtion",
            "example": 123124124
          },
          "state": {
            "type": "string",
            "description": "Possible values are:\n- Active\n- Suspended\n- Inactive",
            "example": "Active"
          },
          "subscriptionStartDate": {
            "type": "string",
            "description": "Subscription start date in \"ddMMyyyyThhmm\" format",
            "example": "22032020T1456"
          },
          "remainingUsage": {
            "type": "integer",
            "description": "Remaining usage of subsciption in days",
            "example": 14
          }
        },
        "description": "Subscribed Category"
      },
      "Signature": {
        "required": [
          "createType",
          "id",
          "language",
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Signature",
            "format": "uuid"
          },
          "alias": {
            "type": "string",
            "description": "Alias of the Signature"
          },
          "language": {
            "type": "string",
            "description": "Possible values are:\n- EN\n- AR"
          },
          "text": {
            "type": "string",
            "description": "Text of the Signature"
          },
          "createType": {
            "type": "string",
            "description": "Create Type of the Signature. User and Predefined"
          }
        },
        "description": "Signature"
      },
      "Event": {
        "required": [
          "endDate",
          "id",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "toneId": {
            "type": "string"
          },
          "signatureId": {
            "type": "string"
          }
        },
        "description": "User defined event with RBT attributes."
      },
      "MsisdnObjectExternal": {
        "type": "object",
        "properties": {
          "msisdn": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          },
          "packageCategory": {
            "type": "string"
          },
          "planCategory": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "serviceAccountNumber": {
            "type": "string"
          },
          "packageName": {
            "type": "string"
          },
          "masterBillingAcc": {
            "type": "string"
          },
          "userAccountId": {
            "type": "string"
          },
          "subAdmin": {
            "type": "boolean"
          },
          "primary": {
            "type": "boolean"
          },
          "raqi": {
            "type": "boolean"
          }
        }
      },
      "Oauth2Token": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Oauth2Token"
      },
      "Location": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "zone": {
            "type": "integer"
          }
        },
        "description": "Geo-location info of the subscriber/user."
      },
      "PutMyFirstLoginRequest": {
        "type": "object",
        "properties": {
          "firstLogin": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}